{"ast":null,"code":"import { useNavigation } from \"@react-navigation/native\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Shadow from \"../components/Shadow.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction MealItem(_ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      imageUrl = _ref.imageUrl,\n      duration = _ref.duration,\n      complexity = _ref.complexity,\n      affordability = _ref.affordability;\n  var navigation = useNavigation();\n\n  function selectMealItemHandler() {\n    navigation.navigate(\"MealDetails\", {\n      mealId: id\n    });\n  }\n\n  return _jsx(View, {\n    style: [styles.container, Shadow.shadowprop],\n    children: _jsx(Pressable, {\n      android_ripple: {\n        color: \"#9dcee2\"\n      },\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return pressed ? styles.buttonPressed : null;\n      },\n      onPress: selectMealItemHandler,\n      children: _jsxs(View, {\n        style: styles.innerContainer,\n        children: [_jsxs(View, {\n          children: [_jsx(Image, {\n            source: {\n              uri: imageUrl\n            },\n            style: styles.image\n          }), _jsx(Text, {\n            style: styles.Title,\n            children: title\n          })]\n        }), _jsxs(View, {\n          style: styles.Details,\n          children: [_jsxs(Text, {\n            style: styles.ItemDetails,\n            children: [duration, \" min\"]\n          }), _jsx(Text, {\n            style: styles.ItemDetails,\n            children: complexity.toUpperCase()\n          }), _jsx(Text, {\n            style: styles.ItemDetails,\n            children: affordability.toUpperCase()\n          })]\n        })]\n      })\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 10,\n    borderRadius: 15,\n    overflow: Platform.OS = \"android\" ? \"hidden\" : \"visible\",\n    backgroundColor: \"#ffffff\"\n  },\n  innerContainer: {\n    borderRadius: 8,\n    margin: 8\n  },\n  image: {\n    width: \"100%\",\n    height: 250,\n    borderRadius: 15\n  },\n  Title: {\n    padding: 8,\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    color: \"#94B49F\"\n  },\n  buttonPressed: {\n    opacity: 0.75\n  },\n  Details: {\n    padding: 8,\n    fontSize: 12,\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  ItemDetails: {\n    color: \"#4f654f\"\n  }\n});\nexport default MealItem;","map":{"version":3,"names":["useNavigation","Shadow","MealItem","id","title","imageUrl","duration","complexity","affordability","navigation","selectMealItemHandler","navigate","mealId","styles","container","shadowprop","color","pressed","buttonPressed","innerContainer","uri","image","Title","Details","ItemDetails","toUpperCase","StyleSheet","create","flex","margin","borderRadius","overflow","Platform","OS","backgroundColor","width","height","padding","fontSize","fontWeight","textAlign","opacity","alignItems","flexDirection","justifyContent"],"sources":["C:/Users/user/Desktop/Abdeali/Coding/ReactNative/Navigation_App/components/MealItem.js"],"sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  Pressable,\r\n  Text,\r\n  View,\r\n  Image,\r\n  StyleSheet,\r\n  Platform,\r\n} from \"react-native\";\r\n\r\nimport Shadow from \"../components/Shadow.js\";\r\n\r\n\r\nfunction MealItem({\r\n  id,\r\n  title,\r\n  imageUrl,\r\n  duration,\r\n  complexity,\r\n  affordability,\r\n}) {\r\n  const navigation = useNavigation();\r\n  function selectMealItemHandler() {\r\n    navigation.navigate(\"MealDetails\", {\r\n      mealId: id,\r\n    });\r\n  }\r\n  return (\r\n    <View style={[styles.container, Shadow.shadowprop]}>\r\n      <Pressable\r\n        android_ripple={{ color: \"#9dcee2\" }}\r\n        style={({ pressed }) => (pressed ? styles.buttonPressed : null)}\r\n        onPress={selectMealItemHandler}\r\n      >\r\n        <View style={styles.innerContainer}>\r\n          <View>\r\n            <Image source={{ uri: imageUrl }} style={styles.image} />\r\n            <Text style={styles.Title}>{title}</Text>\r\n          </View>\r\n          {/* <MealDetails\r\n            duration={duration}\r\n            affordability={affordability}\r\n            complexity={complexity}\r\n          /> */}\r\n          <View style={styles.Details}>\r\n            <Text style={styles.ItemDetails}>{duration} min</Text>\r\n            <Text style={styles.ItemDetails}>{complexity.toUpperCase()}</Text>\r\n            <Text style={styles.ItemDetails}>{affordability.toUpperCase()}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    margin: 10,\r\n    borderRadius: 15,\r\n    overflow: (Platform.OS = \"android\" ? \"hidden\" : \"visible\"),\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  innerContainer: {\r\n    borderRadius: 8,\r\n    margin: 8,\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: 250,\r\n    borderRadius: 15,\r\n  },\r\n  Title: {\r\n    padding: 8,\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    color: \"#94B49F\",\r\n  },\r\n  buttonPressed: {\r\n    opacity: 0.75,\r\n  },\r\n  Details: {\r\n    padding: 8,\r\n    fontSize: 12,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  ItemDetails: {\r\n    color: \"#4f654f\",\r\n  },\r\n});\r\nexport default MealItem;\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,0BAA9B;;;;;;;AAUA,OAAOC,MAAP;;;;AAGA,SAASC,QAAT,OAOG;EAAA,IANDC,EAMC,QANDA,EAMC;EAAA,IALDC,KAKC,QALDA,KAKC;EAAA,IAJDC,QAIC,QAJDA,QAIC;EAAA,IAHDC,QAGC,QAHDA,QAGC;EAAA,IAFDC,UAEC,QAFDA,UAEC;EAAA,IADDC,aACC,QADDA,aACC;EACD,IAAMC,UAAU,GAAGT,aAAa,EAAhC;;EACA,SAASU,qBAAT,GAAiC;IAC/BD,UAAU,CAACE,QAAX,CAAoB,aAApB,EAAmC;MACjCC,MAAM,EAAET;IADyB,CAAnC;EAGD;;EACD,OACE,KAAC,IAAD;IAAM,KAAK,EAAE,CAACU,MAAM,CAACC,SAAR,EAAmBb,MAAM,CAACc,UAA1B,CAAb;IAAA,UACE,KAAC,SAAD;MACE,cAAc,EAAE;QAAEC,KAAK,EAAE;MAAT,CADlB;MAEE,KAAK,EAAE;QAAA,IAAGC,OAAH,SAAGA,OAAH;QAAA,OAAkBA,OAAO,GAAGJ,MAAM,CAACK,aAAV,GAA0B,IAAnD;MAAA,CAFT;MAGE,OAAO,EAAER,qBAHX;MAAA,UAKE,MAAC,IAAD;QAAM,KAAK,EAAEG,MAAM,CAACM,cAApB;QAAA,WACE,MAAC,IAAD;UAAA,WACE,KAAC,KAAD;YAAO,MAAM,EAAE;cAAEC,GAAG,EAAEf;YAAP,CAAf;YAAkC,KAAK,EAAEQ,MAAM,CAACQ;UAAhD,EADF,EAEE,KAAC,IAAD;YAAM,KAAK,EAAER,MAAM,CAACS,KAApB;YAAA,UAA4BlB;UAA5B,EAFF;QAAA,EADF,EAUE,MAAC,IAAD;UAAM,KAAK,EAAES,MAAM,CAACU,OAApB;UAAA,WACE,MAAC,IAAD;YAAM,KAAK,EAAEV,MAAM,CAACW,WAApB;YAAA,WAAkClB,QAAlC;UAAA,EADF,EAEE,KAAC,IAAD;YAAM,KAAK,EAAEO,MAAM,CAACW,WAApB;YAAA,UAAkCjB,UAAU,CAACkB,WAAX;UAAlC,EAFF,EAGE,KAAC,IAAD;YAAM,KAAK,EAAEZ,MAAM,CAACW,WAApB;YAAA,UAAkChB,aAAa,CAACiB,WAAd;UAAlC,EAHF;QAAA,EAVF;MAAA;IALF;EADF,EADF;AA2BD;;AACD,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE,CADG;IAETC,MAAM,EAAE,EAFC;IAGTC,YAAY,EAAE,EAHL;IAITC,QAAQ,EAAGC,QAAQ,CAACC,EAAT,GAAc,YAAY,QAAZ,GAAuB,SAJvC;IAKTC,eAAe,EAAE;EALR,CADoB;EAQ/Bf,cAAc,EAAE;IACdW,YAAY,EAAE,CADA;IAEdD,MAAM,EAAE;EAFM,CARe;EAY/BR,KAAK,EAAE;IACLc,KAAK,EAAE,MADF;IAELC,MAAM,EAAE,GAFH;IAGLN,YAAY,EAAE;EAHT,CAZwB;EAiB/BR,KAAK,EAAE;IACLe,OAAO,EAAE,CADJ;IAELC,QAAQ,EAAE,EAFL;IAGLC,UAAU,EAAE,MAHP;IAILC,SAAS,EAAE,QAJN;IAKLxB,KAAK,EAAE;EALF,CAjBwB;EAwB/BE,aAAa,EAAE;IACbuB,OAAO,EAAE;EADI,CAxBgB;EA2B/BlB,OAAO,EAAE;IACPc,OAAO,EAAE,CADF;IAEPC,QAAQ,EAAE,EAFH;IAGPI,UAAU,EAAE,QAHL;IAIPC,aAAa,EAAE,KAJR;IAKPC,cAAc,EAAE;EALT,CA3BsB;EAkC/BpB,WAAW,EAAE;IACXR,KAAK,EAAE;EADI;AAlCkB,CAAlB,CAAf;AAsCA,eAAed,QAAf"},"metadata":{},"sourceType":"module"}